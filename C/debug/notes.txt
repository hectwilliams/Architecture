
/*
  COMMAND LINE EXAMPLES 
*/

set breakpoint to main()
(lldb) b main

set breakpoint at specific line in code within current function snapshot (i.e. main())
(lldb) b 14
(lldb) b 21
(lldb) b 29

watch a local variable(i.e. count) within current function snapshot during a running process
(lldb) watch set variable count

print watched variable 
(lldb) p count 

starts program/process to step through instructions 
(lldb) run 

continue from current instruction step, stops a breakpoints 
(lldb) c 

delete 4th breakpoint 
(lldb) breakpoint delete 4 

breakpoint command add 3
(lldb) breakpoint command add 3
Enter your debugger command(s).  Type 'DONE' to end.
> v 
> DONE



/*
  BREAKPOINT HANDLER 
*/

Process 32184 resuming
fp 0x7ff7bfeff1c0
pc 0x100000f28
sp 0x7ff7bfeff1b0
func SBFunction: id = 0x400000000000008f, name = main, type = main
rfp 0x7ff7bfeff1c0
rip 0x100000f28
disassembly main`main:
    0x100000f10 <+0>:   pushq  %rbp
    0x100000f11 <+1>:   movq   %rsp, %rbp
    0x100000f14 <+4>:   subq   $0x10, %rsp
    0x100000f18 <+8>:   movl   $0x0, -0x4(%rbp)
    0x100000f1f <+15>:  movl   0x7f(%rip), %eax
    0x100000f25 <+21>:  movl   %eax, -0x8(%rbp)
->  0x100000f28 <+24>:  movl   $0x0, -0xc(%rbp)
    0x100000f2f <+31>:  movl   $0x0, -0x10(%rbp)
    0x100000f36 <+38>:  cmpl   $0x5, -0x10(%rbp)
    0x100000f3a <+42>:  jge    0x100000f57    ; <+71> at run.c:25:28
    0x100000f40 <+48>:  movl   -0xc(%rbp), %eax
    0x100000f43 <+51>:  addl   $0x1, %eax
    0x100000f46 <+54>:  movl   %eax, -0xc(%rbp)
    0x100000f49 <+57>:  movl   -0x10(%rbp), %eax
    0x100000f4c <+60>:  addl   $0x1, %eax
    0x100000f4f <+63>:  movl   %eax, -0x10(%rbp)
    0x100000f52 <+66>:  jmp    0x100000f36    ; <+38> at run.c:19:20
    0x100000f57 <+71>:  movl   -0xc(%rbp), %esi
    0x100000f5a <+74>:  leaq   0x35(%rip), %rdi ; "Counter [%d]\n"
    0x100000f61 <+81>:  movb   $0x0, %al
    0x100000f63 <+83>:  callq  0x100000f76    ; symbol stub for: printf
    0x100000f68 <+88>:  callq  0x100000ef0    ; hello_world at run.c:9
    0x100000f6d <+93>:  xorl   %eax, %eax
    0x100000f6f <+95>:  addq   $0x10, %rsp
    0x100000f73 <+99>:  popq   %rbp
    0x100000f74 <+100>: retq   

is_inlined False
registers General Purpose Registers = {
  rax = 0x0000000000000064
  rbx = 0x0000000100601b90
  rcx = 0x00007ff7bfeff560
  rdx = 0x00007ff7bfeff410
  rdi = 0x0000000000000001
  rsi = 0x00007ff7bfeff400
  rbp = 0x00007ff7bfeff1c0
  rsp = 0x00007ff7bfeff1b0
  r8 = 0x0000000000000000
  r9 = 0x0000000000008000
  r10 = 0x0000000000000000
  r11 = 0x0000000000000202
  r12 = 0x00007ff7bfeff1f0
  r13 = 0x0000000000000000
  r14 = 0x0000000100000f10
  r15 = 0x00007ff7bfeff360
  rip = 0x0000000100000f28
  rflags = 0x0000000000000202
  cs = 0x000000000000002b
  fs = 0x0000000000000000
  gs = 0x0000000000000000
  eax = 0x00000064
  ebx = 0x00601b90
  ecx = 0xbfeff560
  edx = 0xbfeff410
  edi = 0x00000001
  esi = 0xbfeff400
  ebp = 0xbfeff1c0
  esp = 0xbfeff1b0
  r8d = 0x00000000
  r9d = 0x00008000
  r10d = 0x00000000
  r11d = 0x00000202
  r12d = 0xbfeff1f0
  r13d = 0x00000000
  r14d = 0x00000f10
  r15d = 0xbfeff360
  ax = 0x0064
  bx = 0x1b90
  cx = 0xf560
  dx = 0xf410
  di = 0x0001
  si = 0xf400
  bp = 0xf1c0
  sp = 0xf1b0
  r8w = 0x0000
  r9w = 0x8000
  r10w = 0x0000
  r11w = 0x0202
  r12w = 0xf1f0
  r13w = 0x0000
  r14w = 0x0f10
  r15w = 0xf360
  ah = 0x00
  bh = 0x1b
  ch = 0xf5
  dh = 0xf4
  al = 0x64
  bl = 0x90
  cl = 0x60
  dl = 0x10
  dil = 0x01
  sil = 0x00
  bpl = 0xc0
  spl = 0xb0
  r8l = 0x00
  r9l = 0x00
  r10l = 0x00
  r11l = 0x02
  r12l = 0xf0
  r13l = 0x00
  r14l = 0x10
  r15l = 0x60
}
Floating Point Registers = {
  fctrl = 0x037f
  fstat = 0x0000
  ftag = 0x0000
  fop = 0x0000
  fioff = 0x00000000
  fiseg = 0x0000
  fooff = 0x00000000
  foseg = 0x0000
  mxcsr = 0x00001f80
  mxcsrmask = 0x0000ffff
  stmm0 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff)
  stmm1 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  stmm2 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  stmm3 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  stmm4 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  stmm5 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff)
  stmm6 = (0xdb, 0x15, 0x32, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff)
  stmm7 = (0x73, 0xf2, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff)
  ymm0 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm1 = (0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm2 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm3 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm4 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm5 = (0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm6 = (0xcd, 0x84, 0x6d, 0x89, 0xa2, 0x85, 0xf1, 0xba, 0x58, 0xb5, 0xf5, 0x62, 0x75, 0x46, 0x89, 0xe1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm7 = (0xfe, 0xb6, 0x01, 0xa4, 0x1e, 0xda, 0x6b, 0x2b, 0xe5, 0x7f, 0xbd, 0x82, 0x85, 0x2d, 0x5a, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm8 = (0xcd, 0x89, 0x61, 0x1f, 0x72, 0x46, 0xfe, 0x49, 0x19, 0x21, 0xa8, 0x4d, 0x38, 0x4f, 0xb9, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm9 = (0xd1, 0xef, 0x04, 0xf8, 0x76, 0xb0, 0x5f, 0x1b, 0x82, 0x72, 0x97, 0x2a, 0x0f, 0xff, 0x67, 0x84, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm10 = (0x00, 0x46, 0x86, 0x9a, 0x3d, 0xe4, 0x25, 0xc0, 0x94, 0x62, 0x62, 0xda, 0xea, 0xa9, 0x0c, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm11 = (0x31, 0xd7, 0x74, 0xd0, 0xcf, 0x24, 0x1d, 0xac, 0xd4, 0xa8, 0xc9, 0x52, 0x4a, 0x09, 0x47, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm12 = (0xd6, 0x47, 0x26, 0xc3, 0xeb, 0xa3, 0x03, 0x03, 0x7f, 0xc1, 0x61, 0xd9, 0x95, 0x68, 0x6d, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm13 = (0x70, 0xeb, 0x82, 0xfa, 0xbf, 0xcf, 0x9f, 0x56, 0x6b, 0x67, 0x56, 0x04, 0x21, 0x6e, 0x11, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm14 = (0x2b, 0xd8, 0xa4, 0x41, 0xc0, 0x7b, 0xa7, 0x42, 0xbf, 0xba, 0xc6, 0x9b, 0x2a, 0xd2, 0xab, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  ymm15 = (0xc4, 0x34, 0xbd, 0x6e, 0x7e, 0xde, 0x08, 0x8f, 0xc1, 0x09, 0x8d, 0x4c, 0x1f, 0x0c, 0xf9, 0xc9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  xmm0 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  xmm1 = (0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  xmm2 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  xmm3 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  xmm4 = (0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  xmm5 = (0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00)
  xmm6 = (0xcd, 0x84, 0x6d, 0x89, 0xa2, 0x85, 0xf1, 0xba, 0x58, 0xb5, 0xf5, 0x62, 0x75, 0x46, 0x89, 0xe1)
  xmm7 = (0xfe, 0xb6, 0x01, 0xa4, 0x1e, 0xda, 0x6b, 0x2b, 0xe5, 0x7f, 0xbd, 0x82, 0x85, 0x2d, 0x5a, 0xb9)
  xmm8 = (0xcd, 0x89, 0x61, 0x1f, 0x72, 0x46, 0xfe, 0x49, 0x19, 0x21, 0xa8, 0x4d, 0x38, 0x4f, 0xb9, 0x5c)
  xmm9 = (0xd1, 0xef, 0x04, 0xf8, 0x76, 0xb0, 0x5f, 0x1b, 0x82, 0x72, 0x97, 0x2a, 0x0f, 0xff, 0x67, 0x84)
  xmm10 = (0x00, 0x46, 0x86, 0x9a, 0x3d, 0xe4, 0x25, 0xc0, 0x94, 0x62, 0x62, 0xda, 0xea, 0xa9, 0x0c, 0x0f)
  xmm11 = (0x31, 0xd7, 0x74, 0xd0, 0xcf, 0x24, 0x1d, 0xac, 0xd4, 0xa8, 0xc9, 0x52, 0x4a, 0x09, 0x47, 0x15)
  xmm12 = (0xd6, 0x47, 0x26, 0xc3, 0xeb, 0xa3, 0x03, 0x03, 0x7f, 0xc1, 0x61, 0xd9, 0x95, 0x68, 0x6d, 0xd6)
  xmm13 = (0x70, 0xeb, 0x82, 0xfa, 0xbf, 0xcf, 0x9f, 0x56, 0x6b, 0x67, 0x56, 0x04, 0x21, 0x6e, 0x11, 0x11)
  xmm14 = (0x2b, 0xd8, 0xa4, 0x41, 0xc0, 0x7b, 0xa7, 0x42, 0xbf, 0xba, 0xc6, 0x9b, 0x2a, 0xd2, 0xab, 0x4d)
  xmm15 = (0xc4, 0x34, 0xbd, 0x6e, 0x7e, 0xde, 0x08, 0x8f, 0xc1, 0x09, 0x8d, 0x4c, 0x1f, 0x0c, 0xf9, 0xc9)
}
Exception State Registers = (trapno = 0x00000003, err = 0x00000000, faultvaddr = 0x0000000000000000)
------local variables___
(Record) r = (a = 100)
(int) count = 32759
(int) i = <out of scope>

----------------
------arguments___
<empty> lldb.SBValueList()
----------------
------statics----
<empty> lldb.SBValueList()
----------------
Process 32184 stopped




/*
  DUMP COMMANDS 

*/


% objdump --section-headers   main
Sections:
Idx Name          Size     VMA              Type
  0 __text        00000085 0000000100000ef0 TEXT
  1 __stubs       00000006 0000000100000f76 TEXT
  2 __cstring     00000028 0000000100000f7c DATA
  3 __const       00000004 0000000100000fa4 DATA
  4 __unwind_info 00000058 0000000100000fa8 DATA
  5 __got         00000008 0000000100001000 DATA


 % objdump -s -j  __text main         
Contents of section __TEXT,__text:
 100000ef0 554889e5 488d3d81 000000b0 00e87400  UH..H.=.......t.
 100000f00 00005dc3 6666662e 0f1f8400 00000000  ..].fff.........
 100000f10 554889e5 4883ec10 c745fc00 0000008b  UH..H....E......
 100000f20 057f0000 008945f8 c745f400 000000c7  ......E..E......
 100000f30 45f00000 0000837d f0050f8d 17000000  E......}........
 100000f40 8b45f483 c0018945 f48b45f0 83c00189  .E.....E..E.....
 100000f50 45f0e9df ffffff8b 75f4488d 3d350000  E.......u.H.=5..
 100000f60 00b000e8 0e000000 e883ffff ff31c048  .............1.H
 100000f70 83c4105d c3                          ...].


% objdump -s -j  __const main  
Contents of section __TEXT,__const:
 100000fa4 64000000                             d...


% objdump -s -j  __stubs main   
Contents of section __TEXT,__stubs:
 100000f76 ff258400 0000                        .%....


% objdump -s -j  __unwind_info  main  
Contents of section __TEXT,__unwind_info:
 100000fa8 01000000 1c000000 00000000 1c000000  ................
 100000fb8 00000000 1c000000 02000000 f00e0000  ................
 100000fc8 40000000 40000000 750f0000 00000000  @...@...u.......
 100000fd8 40000000 00000000 00000000 00000000  @...............
 100000fe8 03000000 0c000100 10000100 00000000  ................
 100000ff8 00000001 00000000                    ........